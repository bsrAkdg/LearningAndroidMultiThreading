
** Instantiating New Threads : Two way
    1. Create a class : (Inheritance)
        public class MyThread extends Thread {
            private final int mSeed;

            public MyThread(int seed) {
                mSeed = seed;
            }

            @Override
            public void run() {
                // perform some calculation
            }
        }

        Thread myCustomThread = new MyThread(10);
        myCustomThread.start(); // start thread

    2. User runnable : (Composition) This is a container for threads

        Runnable runnable = new Runnable() {
            @Override
            public void run() {
                int seed = 10;
                // perform some calculation
            }
        }

        Thread thread = new Thread(runnable);
        thread.start(); // start thread

** Effective Java Item 18 : Favor Composition over Inheritance

** Important roots in Android application : (do not eligible GC)
    1. Objects referenced from static fields
    2. Instances of Application class* (custom subclass of application class)
    3. Live threads (thread.start())

        - Anonymous Threads : MainActivity instance can't be GC'ed as long as the anonymous Thread instance is live
            public class MainActivity ... {
                @Override
                protected void onCreate(){
                    new Thread(new Runnable() {
                        @Override
                        public void run() {
                            // perform some long-running operation
                        }
                    }).start();
                }
            }
        - Inner Threads : MainActivity instance can't be GC'ed as long as the anonymous Thread instance is live

            public class MainActivity ... {
                @Override
                protected void onCreate(){
                    new MyThread().start();
                }

                private class MyThread extends Thread {
                    @Override
                    public void run() {
                        // perform some long-running operation
                    }
                }
            }